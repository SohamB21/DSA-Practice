// T.C. = O(n*n)     S.C. = O(1)
#include <stdio.h>
#include <stdbool.h>

int arr[] = {90, 10, 80, 20, 70, 30, 60, 40, 50};
void bubbleSort(int n){
    int i, j, temp;
    bool swapped;
    for(i=0; i<n-1; i++){
        swapped = false;
        for(j=0; j<n-1-i; j++){
            if(arr[j] > arr[j+1]){
                temp = arr[j+1];
                arr[j+1] = arr[j];
                arr[j] = temp;
                swapped = true;
            }
        }
        //to optimize best case TC = O(n)
        //in case of already sorted array
        if(swapped == false)
            break;
    }
}
int main() {
    int i, n = sizeof(arr)/sizeof(arr[0]);
    //printing initial array
    printf("Initial array...\n");
    for(i=0; i<n; i++)
        printf("%d, ", arr[i]);
    
    bubbleSort(n);
    
    //printing sorted array
    printf("\nSorted array...\n");
    for(i=0; i<n; i++)
        printf("%d, ", arr[i]);
    return 0;
}
